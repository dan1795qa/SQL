-- Выборка отдельных столбцов
SELECT author, title, price 
FROM book;   


-- Отобрать данные из определенных столбцов таблицы и одновременно задать столбцам новые имена используется
-- ключевое слово SELECT ; 
-- имя столбца;
-- ключевое слово AS ; 
-- новое название столбца (можно русскими буквами), но это должно быть одно слово, если название состоит из двух
-- слов – соединяйте их подчеркиванием, например, Количество_книг ; 
-- запятая; 
-- имя столбца; 
-- .... 
-- ключевое слово FROM ; 
-- имя таблицы.
SELECT title AS Название, author AS Автор
FROM book;


-- Выборка данных с созданием вычисляемого столбца (нужно было посчитать сколько надо денег на обертку книг каждого наименования (обертка стоит 1.65 р))
SELECT title, amount,
amount*1.65 AS pack
FROM book;


-- Выборка данных, вычисляемые столбцы, математические функции (например вычисление удешевения книги на 30% с указанием новой цены с 2-мя знаками после запятой)
SELECT title, author, amount, 
ROUND(price*0.7, 2) AS new_price
FROM book;


-- Выборка данных, вычисляемые столбцы, логические функции
    IF(amount<4, price*0.5, price*0.7) AS sale
FROM book;


-- Вместе с округлением:
-- Исходя из этого решили поднять цену книг Булгакова на 10%, а цену книг Есенина - на 5%. 
-- Написать запрос, куда включить автора, название книги и новую цену, последний столбец назвать new_price. Значение округлить до двух знаков после запятой.
SELECT title, amount, price, 
SELECT author, title, 
ROUND((IF(author = 'Булгаков М.А.', price*1.1, IF(author = 'Есенин С.А.', price*1.05, price))), 2) AS new_price
FROM book;


-- Выборка данных по условию
SELECT author, title, price
FROM book
WHERE amount < 10;


-- Выборка данных, с помощью логических операций 
-- 1. круглые скобки
-- 2. умножение  (*),  деление (/)
-- 3. сложение  (+), вычитание (-)
-- 4. операторы сравнения (=, >, <, >=, <=, <>)
-- 5. NOT
-- 6. AND
-- 7. OR 
-- Вывести название, автора,  цену  и количество всех книг, цена которых меньше 500 или больше 600, а стоимость всех экземпляров этих книг больше или равна 5000.
SELECT title, author, price, amount
FROM book
WHERE (price < 500 OR price > 600) AND amount*price >= 5000;


-- Выборка данных, операторы BETWEEN, IN ( выполняются раньше, чем NOT, AND, OR.)
-- Вывести название и авторов тех книг, цены которых принадлежат интервалу от 540.50 до 800 (включая границы),  а количество или 2, или 3, или 5, или 7 .
SELECT title, author
FROM book
WHERE price BETWEEN 540.50 AND 800 AND amount IN (2, 3, 5, 7);


-- Выборка данных с сортировкой
-- Логический порядок операций для запроса SQL следующий:
-- 1. FROM
-- 2. WHERE
-- 3. SELECT
-- 4. ORDER BY
-- Важно! Если названия столбцов заключены в кавычки, то при использовании их в сортировке, необходимо записывать их БЕЗ КАВЫЧЕК.
-- Вывести  автора и название  книг, количество которых принадлежит интервалу от 2 до 14 (включая границы). 
-- Информацию  отсортировать сначала по авторам (в обратном алфавитном порядке), а затем по названиям книг (по алфавиту).
SELECT author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY author DESC, title; 
-- ИЛИ
SELECT author, title
FROM book
WHERE amount BETWEEN 2 AND 14
ORDER BY 1 DESC, 2;


-- Выборка данных, оператор LIKE
-- Вывести название и автора тех книг, название которых состоит из двух и более слов, а инициалы автора содержат букву «С». 
-- Информацию отсортировать по названию книги в алфавитном порядке.
SELECT title, author
FROM book
WHERE title LIKE '%_ _%' and author LIKE '%С.%'
ORDER BY title;



HARDENING TASK

-- Определить стоимость доставки:
-- для книг стоимостью 500 и менее, установить в размере 99.99
-- при количестве книг на складе менее 5, установить в размере 149.99
-- для остальных случаев доставка должна быть бесплатной
Определить новую стоимость для книг:
-- для книг, совокупной стоимостью более 5000, добавить 20% к стоимости за экземпляр
-- для остальных случаев снизить стоимость одного экземпляра на 20%
Настроить фильтр при выборке:
-- только позиции творчества авторов: Булгаков и Есенин, при количестве экземпляров на складе: от 3 до 14 включительно.
Сортировку выполнить:
-- по имени автора в порядке возрастания
-- затем по названию в порядке убывания
-- по стоимости доставки (от меньшей к большей)
--В таблице должны быть отображены данные:
-- автора
-- название
-- цену, как real_price
-- количество
-- новую цену, как new_price
-- стоимость доставки, как delivery_price
SELECT author, title,
price AS real_price,
amount, 
IF(amount*price > 5000, 1.20*price, 0.80*price) AS new_price,
IF(price <= 500, 99.99, IF (amount < 5, 149.99, 0.00)) AS delivery_price 
FROM book
WHERE author IN('Булгаков М.А.', 'Есенин С.А.') AND amount BETWEEN 3 AND 15
ORDER BY author, title desc, delivery_price;



-- Менеджер по закупкам должен сформировать заказ на поставку книг, у него есть база данных всех книг, хранящихся на складе (таблица book). По плану руководства, нужно, чтобы на складе хранилось 30 экземпляров каждой книги.
-- Необходимо добавить в таблицу столбцы title, author, amount и добавить новые столбцы:
-- wholesale_price (оптовая цена книги - меньше price на 30%);
-- purchase (количество книг, которое необходимо докупить);
-- total_price (стоимость закупки - wholesale_price умноженная на purchase).
-- Отсортировать базу необходимо по стоимости закупки (total_price) в порядке убывания. Цены должны быть округлены до двух знаков после запятой.
SELECT title, author, amount,
ROUND(price*0.70, 2) AS wholesale_price,
IF(amount<30, 30-amount, 0) AS purchase,
ROUND(price*0.70*(30-amount), 2) AS total_price
FROM book
ORDER BY total_price desc;